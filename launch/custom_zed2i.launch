<launch>
    <!-- Copied from various sources -->

    <!-- Camera Model and Name --> 
    <!-- ======= -->   
    <!-- Copied from "$(find zed_wrapper)/launch/zed2i.launch" -->
    <!-- ======= -->   
    <arg name="camera_name"           default="zed2i_wrist" /> <!-- The name you want -->
    <arg name="camera_model"          default="zed2i" /> <!-- 'zed' or 'zedm' or 'zed2' -->
    <arg name="node_name"             default="zed_node" />

    <!-- ======= -->   
    <!-- Copied from "$(find zed_wrapper)/launch/include/zed_camera_nodelete.launch.xml" -->
    <!-- ======= -->   
    <!-- Load SVO file -->
    <arg name="svo_file"              default="" /><!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <!-- Remote stream -->
    <arg name="stream"                default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <!-- Base frame -->
    <arg name="base_frame"            default="base_link" />

    <!-- Publish ZED urdf -->
    <arg name="publish_urdf"          default="true" />

    <arg name="camera_id"             default="0" />
    <arg name="gpu_id"                default="-1" />

    <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_x"             default="0.0" />
    <arg name="cam_pos_y"             default="0.0" />
    <arg name="cam_pos_z"             default="0.0" />

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" />
    <arg name="cam_pitch"             default="0.0" />
    <arg name="cam_yaw"               default="0.0" />

    <!-- ======= -->   
    <!-- Set potential override file -->
    <arg name="param_overrides"       default="" />
    <!-- ======= -->   

    <!-- NOTE: THE NODELET MANAGER MUST BE STARTED EXTERNALLY. SEE "zed_nodelet_example" -->

    <!-- Name of the Nodelet Manager -->
    <arg name="nodelet_manager_name"  default="zed_nodelet_manager" />

    <!-- ROS URDF description of the ZED -->
    <group if="$(arg publish_urdf)">
        <param name="$(arg camera_name)_description"
               command="$(find xacro)/xacro '$(find zed_wrapper)/urdf/zed_descr.urdf.xacro'
                        camera_name:=$(arg camera_name)
                        camera_model:=$(arg camera_model)
                        base_frame:=$(arg base_frame)
                        cam_pos_x:=$(arg cam_pos_x)
                        cam_pos_y:=$(arg cam_pos_y)
                        cam_pos_z:=$(arg cam_pos_z)
                        cam_roll:=$(arg cam_roll)
                        cam_pitch:=$(arg cam_pitch)
                        cam_yaw:=$(arg cam_yaw)"
        />

        <node name="$(arg camera_name)_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" required="true">
            <remap from="robot_description" to="$(arg camera_name)_description" />
        </node>
    </group>

    <node name="$(arg node_name)" pkg="zed_wrapper" type="zed_wrapper_node" output="screen" required="true"><!-- launch-prefix="valgrind" -->
        <rosparam file="$(find zed_wrapper)/params/common.yaml" command="load" />
        <rosparam file="$(find zed_wrapper)/params/$(arg camera_model).yaml" command="load" />

        <!-- Camera name -->
        <param name="general/camera_name"               value="$(arg camera_name)" />

        <!-- Base frame -->
        <param name="general/base_frame"                value="$(arg base_frame)" />

        <!-- SVO file path -->
        <param name="svo_file"                          value="$(arg svo_file)" />

        <!-- Remote stream -->
        <param name="stream"                            value="$(arg stream)" />

        <!-- Camera ID -->
        <param name="general/zed_id"                    value="$(arg camera_id)" />

        <!-- GPU ID -->
        <param name="general/gpu_id"                    value="$(arg gpu_id)" />

        <!-- ======= -->   
        <!-- If we got a file, we use it to override the params -->
        <rosparam if="$(eval arg('param_overrides') != '')" command="load" file="$(arg param_overrides)"/>
        <!-- ======= -->   

    </node>
</launch>